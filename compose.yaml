version: "2.4"

name: lgtm-stack

services:

  otel-collector:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:${OTELCOL_TAG:-0.84.0}
    command:
      - "--config=/etc/otel-collector-config.yaml"
      - "--feature-gates=-pkg.translator.prometheus.NormalizeName"
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - DOCKER_MULTI_NODE_CLUSTER=false
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.0
    environment:
      GF_FEATURE_TOGGLES_ENABLE: correlations
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/datasource-loki.yml:/etc/grafana/provisioning/datasources/loki.yml:ro
      - ./grafana/datasource-prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml:ro
      - ./grafana/datasource-tempo.yml:/etc/grafana/provisioning/datasources/tempo.yml:ro

  tempo:
    image: grafana/tempo:2.2.2
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo/data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin

  prometheus:
    image: prom/prometheus:v2.37.9
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus.yaml:ro
      - ./prometheus/data:/prometheus
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:2.8.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml:ro
      - ./loki/data:/tmp/loki

  logspout:
    image: gliderlabs/logspout:v3.2.14
    volumes:
      - /etc/hostname:/etc/host_hostname:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: syslog+tcp://otel-collector:2255
    depends_on:
      - otel-collector
    restart: on-failure

  hotrod:
    image: jaegertracing/example-hotrod:1.48.0
    logging:
      options:
        max-size: 50m
        max-file: "3"
    command: [ "all" ]
    environment:
      - JAEGER_ENDPOINT=http://otel-collector:14268/api/traces

  load-hotrod:
    image: signoz/locust:1.2.3
    hostname: load-hotrod
    environment:
      ATTACKED_HOST: http://hotrod:8080
      LOCUST_MODE: standalone
      NO_PROXY: standalone
      TASK_DELAY_FROM: 5
      TASK_DELAY_TO: 30
      QUIET_MODE: "${QUIET_MODE:-false}"
      LOCUST_OPTS: "--headless -u 1 -r 1"
    ports:
      - 8089:8089
    volumes:
      - ./locust/scripts:/locust
